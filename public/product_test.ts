import { fetchProduct } from "./product.ts";
import {
  any,
  anyBoolean,
  anyNumber,
  anyOf,
  anyString,
  expect,
  test,
} from "../dev_deps.ts";

const symbols = [
  "S$",
  "HK$",
  "AU$",
  "€",
  "$",
  "¥",
  "Rp",
  "Ꝗ",
  "฿",
  "Ξ",
  "₹",
  "₱",
  "XRP",
  "MCO",
  "FDX",
  "TPT",
  "IXT",
  "SAL",
  "SER",
  "ECH",
  "GAT",
  "SNIP",
  "STAC",
  "MGO",
  "BTRN",
  "ADH",
  "ALX",
  "LND",
  "FLP",
  "ZPR",
  "UBT",
  "FTT",
  "MITH",
  "ONT",
  "CMCT",
  "KRL",
  "FLIXX",
  "GET",
  "WIN",
  "CRPT",
  "IDH",
  "DACS",
  "DRG",
  "TPAY",
  "FSN",
  "ETN",
  "AMLT",
  "MRK",
  "IHF",
  "1WO",
  "ENJ",
  "PPL",
  "XNK",
  "GEN",
  "HOT",
  "MT",
  "UKG",
  "SPHTX",
  "MTN",
  "GZE",
  "CAN",
  "SIX",
  "IPSX",
  "LIKE",
  "MITX",
  "DENT",
];

const anyNumberOrNull = anyOf([anyNumber(), null]);

export const equality = {
  id: anyString(),
  product_type: "CurrencyPair",
  code: "CASH",
  name: anyOf([anyString(), null]),
  symbol: anyOf([...symbols, null]),
  currency: anyString(),
  quoted_currency: anyString(),
  base_currency: anyString(),
  currency_pair_code: anyString(),
  market_ask: anyNumberOrNull,
  market_bid: anyNumberOrNull,
  indicator: anyNumberOrNull,
  btc_minimum_withdraw: null,
  fiat_minimum_withdraw: null,
  pusher_channel: anyString(),
  taker_fee: anyNumber(),
  maker_fee: anyNumber(),
  average_price: anyNumber(),
  low_market_bid: anyNumberOrNull,
  high_market_ask: anyNumberOrNull,
  volume_24h: anyNumberOrNull,
  last_price_24h: anyNumberOrNull,
  last_traded_price: anyNumberOrNull,
  last_traded_quantity: anyNumberOrNull,
  tick_size: anyNumber(),
  disabled: anyBoolean(),
  margin_enabled: anyBoolean(),
  cfd_enabled: anyBoolean(),
  perpetual_enabled: anyBoolean(),
  last_event_timestamp: any(Date),
  timestamp: any(Date),
  multiplier_up: anyString(),
  multiplier_down: anyString(),
  average_time_interval: anyNumber(),
  progressive_tier_eligible: anyBoolean(),
  exchange_rate: anyOf([anyNumber(), undefined]),
};

test("fetchProduct", async () => {
  await expect(fetchProduct({ id: "1" })).resolves.toEqual(equality);
});
